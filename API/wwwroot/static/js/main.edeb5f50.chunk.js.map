{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","runInAction","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivty","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","i","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadUserActivities","loadFollowings","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","storeContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","ev","dt","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.edeb5f50.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage : number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber ;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"unauthorised\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\", { params }).then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {})\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post(\"photos\", formData, {\r\n      headers: {\r\n        \"Content-type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n  },\r\n  setMainPhoto: (id: String) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?\r\npredicate=${predicate}`)\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n};\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n};\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  }\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate') this.predicate.delete(key);\r\n      })\r\n    }\r\n    \r\n    switch (predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n\r\n    }\r\n  }\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === 'startDate') {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity, i) => {\r\n        // TODO: To update logged in user photo in the activity list.\r\n        // activity.attendees.forEach((item) => console.log(item.image));\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      runInAction(() => {\r\n        result.data.forEach((activity) => {\r\n          this.setActivity(activity);\r\n        });\r\n        this.setPagination(result.pagination);\r\n        this.setLoadingInitial(false);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.setLoadingInitial(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  }\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivty = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivty as Activity);\r\n          this.selectedActivity = updatedActivty as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (a) => a.username !== user!.username\r\n            );\r\n\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) =>\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n\r\n          attendee.following = !attendee.following;\r\n        }\r\n      })\r\n    );\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followersCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(username, predicate!);\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      })\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus(response => {\r\n      if (response.status === 'connected') {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    })\r\n  }\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken).then(user => {\r\n        store.commonStore.setToken(user.token);\r\n        runInAction(() => {\r\n          this.user = user;\r\n          this.fbLoading = false;\r\n        })\r\n        history.push('/activities');\r\n      }).catch(error => {\r\n        console.log(error);\r\n        runInAction(() => this.fbLoading = false);\r\n      })\r\n    }\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n      this.fbLoading = false;\r\n    } else {\r\n      window.FB.login(response => {\r\n        apiLogin(response.authResponse.accessToken);\r\n        this.fbLoading = false;\r\n      }, { scope: 'public_profile,email' })\r\n    }\r\n  }\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore()\r\n};\r\n\r\nexport const storeContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(storeContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comments\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection: \", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Container, Button, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} exact to=\"/\" header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          as={NavLink}\r\n          exact\r\n          to=\"/activities\"\r\n          name=\"Activities\"\r\n        ></Menu.Item>\r\n        <Menu.Item as={NavLink} exact to=\"/errors\" name=\"Errors\"></Menu.Item>\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            exact\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const { activityStore: { predicate, setPredicate } } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has('all')}\r\n          onClick={() => setPredicate('all', 'true')}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has('isGoing')}\r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has('isHost')}\r\n          onClick={() => setPredicate('isHost', 'true')}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate('startDate', date as Date)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      />\r\n    </>\r\n  );\r\n})\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          basic\r\n          fluid\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Image, Icon } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount === 1\r\n          ? `${profile.followersCount} follower`\r\n          : `${profile.followersCount} followers`}\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image style={{marginBottom: 3}} size=\"tiny\" circular src={activity.host?.image || \"/assets/user.png\"} />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.date!, \"dd MMMM yyyy hh:mm aa\")}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, List, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n        loadActivities().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityRegistry.size <= 1)\r\n            loadActivities();\r\n    }, [activityRegistry.size, loadActivities]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                        <ActivityListItemPlaceholder />\r\n                        <ActivityListItemPlaceholder />\r\n                    </>\r\n                ) : (\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={handleGetNext}\r\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n                        initialLoad={false}\r\n                    >\r\n                        <List>\r\n                            <ActivityList />\r\n                        </List>\r\n                    </InfiniteScroll>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilters />\r\n            </Grid.Column>\r\n            <Grid.Column width='10'>\r\n                <Loader active={loadingNext} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n});","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid Email/Password!\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivites\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivites\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Image, Header, Segment, Divider } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\">\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go To Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>OR</Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size='huge'\r\n              inverted\r\n              color='facebook'\r\n              content='Login with Facebook'\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n};\r\n\r\nexport default function LoadingComponent({ inverted = true, content = \"Loading...\" }: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n};","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n        <Select clearable options={props.options} value={field.value || null} \r\n        onChange={(ev, dt) => helpers.setValue(dt.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n        />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n    { text:'Drinks', value:'drinks'},\r\n    { text:'Culture', value:'culture'},\r\n    { text:'Film', value:'film'},\r\n    { text:'Food', value:'food'},\r\n    { text:'Music', value:'music'},\r\n    { text:'Travel', value:'travel'},\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Segment, Form, Button, Header } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(\"The activity category is required\"),\r\n    date: Yup.string().required(\"The activity date is required\").nullable(),\r\n    venue: Yup.string().required(\"The activity venue is required\"),\r\n    city: Yup.string().required(\"The activity city is required\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput placeholder=\"Title\" name=\"title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              loading={isSubmitting}\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n      <Formik\r\n            onSubmit={(values, { resetForm }) =>\r\n              commentStore.addComment(values).then(() => resetForm())\r\n            }\r\n            initialValues={{ body: \"\" }}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required(),\r\n            })}\r\n          >\r\n            {({ isSubmitting, isValid, handleSubmit }) => (\r\n              <Form className=\"ui form\">\r\n                <Field name=\"body\">\r\n                  {(props: FieldProps) => (\r\n                    <div style={{ position: \"relative\" }}>\r\n                      <Loader active={isSubmitting} />\r\n                      <textarea\r\n                        placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                        rows={2}\r\n                        {...props.field}\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === \"enter\" && e.shiftKey) {\r\n                            return;\r\n                          }\r\n                          if (e.key === \"Enter\" && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            isValid && handleSubmit();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 1000,\r\n              left: -14,\r\n              top: 20,\r\n            }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy hh:mm aa\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!,'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name=\"search\" />\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to=\"/activities\" primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    );\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer (function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n        <Modal.Content>\r\n            {modalStore.modal.body}\r\n        </Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update Profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadUserActivities,\r\n        profile,\r\n        loadingActivities,\r\n        userActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities?.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile!.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1- Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2- Resize Photo\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3- Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group width={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const { userStore: { isLoggedIn } } = useStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\r\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname])\r\n\r\n    return null;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, storeContext } from './app/stores/store';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <storeContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </storeContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}